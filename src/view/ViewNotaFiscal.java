/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ControllerFornecedor;
import controller.ControllerNotaFiscal;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.ModelFornecedor;
import model.ModelNotaFiscal;
import util.Datas;
import util.Mensagem;

/**
 *
 * @author MICRO-70
 */
public class ViewNotaFiscal extends javax.swing.JFrame {
        ModelNotaFiscal modelnotafiscal = new ModelNotaFiscal();
        ControllerNotaFiscal controllerNotaFiscal = new ControllerNotaFiscal();
        ControllerFornecedor controllerFornecedor = new ControllerFornecedor();
        ModelFornecedor modelFornecedor = new ModelFornecedor();
        ArrayList<ModelNotaFiscal> listaModelNotaFiscals = new ArrayList<>();
        ArrayList<ModelFornecedor> listaModelFornecedor = new ArrayList<>();
        String tipoCadastro;
    
    public ViewNotaFiscal() {
        initComponents();
        setLocationRelativeTo(null);
        this.limparDados();
        this.habilitaDesabilitarCampos(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTNotaFiscal = new javax.swing.JTextField();
        jTQtd = new javax.swing.JTextField();
        jTValorNota = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbNotaFiscal = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        cbFornecedor = new javax.swing.JComboBox<>();
        btCancelar1 = new javax.swing.JButton();
        btFinalizar = new javax.swing.JButton();
        btNovo = new javax.swing.JButton();
        jdData = new com.toedter.calendar.JDateChooser();
        jbExcluirPagar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Cadastro de Notas Fiscais");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(214, 214, 214)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(217, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        jLabel2.setText("Nota Fiscal:");

        jLabel3.setText("Data da Nota:");

        jLabel4.setText("Quantidade de itens:");

        jLabel5.setText("Valor da Nota:");

        jTNotaFiscal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jTQtd.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jTValorNota.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        tbNotaFiscal.setAutoCreateRowSorter(true);
        tbNotaFiscal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tbNotaFiscal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nota Fiscal", "Quantidade de Itens", "Valor Nota", "Data da Nota", "Fornecedor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbNotaFiscal);

        jLabel6.setText("Fornecedor:");

        cbFornecedor.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cbFornecedorPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        btCancelar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/No.png"))); // NOI18N
        btCancelar1.setText("Cancelar");
        btCancelar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelar1ActionPerformed(evt);
            }
        });

        btFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/Save.png"))); // NOI18N
        btFinalizar.setText("Salvar");
        btFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFinalizarActionPerformed(evt);
            }
        });

        btNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/Add.png"))); // NOI18N
        btNovo.setText("Novo");
        btNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovoActionPerformed(evt);
            }
        });

        jdData.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jbExcluirPagar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/Delete.png"))); // NOI18N
        jbExcluirPagar.setText("Excluir");
        jbExcluirPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirPagarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btNovo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btCancelar1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbExcluirPagar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btFinalizar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTNotaFiscal, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(34, 34, 34)
                                        .addComponent(jLabel2)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTQtd))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(jTValorNota, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jdData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cbFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addComponent(jLabel5)
                                        .addGap(39, 39, 39)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel6)
                                        .addGap(96, 96, 96))))
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTQtd)
                    .addComponent(cbFornecedor)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTNotaFiscal, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTValorNota, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jdData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btFinalizar)
                    .addComponent(btNovo)
                    .addComponent(btCancelar1)
                    .addComponent(jbExcluirPagar))
                .addContainerGap())
        );

        cbFornecedor.getAccessibleContext().setAccessibleParent(jLabel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbFornecedorPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cbFornecedorPopupMenuWillBecomeInvisible
        if (this.cbFornecedor.isPopupVisible()) {
            modelFornecedor = controllerFornecedor.getFornecedorController(cbFornecedor.getSelectedItem().toString());
            //recupera o código
    //        this.cbCodFornecedor.setSelectedItem(modelFornecedor.getCodigo());
        }
    }//GEN-LAST:event_cbFornecedorPopupMenuWillBecomeInvisible

    private void btFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFinalizarActionPerformed
        
        if (jTNotaFiscal.getText().equals("") || jdData.getDate().equals("") || jTQtd.getText().equals("") || jTValorNota.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Você deve preencher todos os campos!", "ATENÇÂO", JOptionPane.WARNING_MESSAGE);
        }else{
            if(tipoCadastro.equals("cadastro")){
                this.salvar();
         //       jTabbedPane1.setSelectedIndex(jTabbedPane1.getSelectedIndex() - 2);
            }
        }
        recuperarNota();
    }//GEN-LAST:event_btFinalizarActionPerformed

    private void btNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovoActionPerformed
            this.limparDados();
        this.habilitaDesabilitarCampos(true);
        tipoCadastro = "cadastro";
//        DefaultTableModel modelo = (DefaultTableModel) tbNotaFiscal.getModel();
 //           modelo.setNumRows(0);
    }//GEN-LAST:event_btNovoActionPerformed

    private void btCancelar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelar1ActionPerformed
    //    desabilitarCampos();
        this.limparDados();
        this.habilitaDesabilitarCampos(false);
   //    tbNotaFiscal.setSelectionModel((ListSelectionModel) evt);
    }//GEN-LAST:event_btCancelar1ActionPerformed

    private void jbExcluirPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirPagarActionPerformed
       excluirConta();
    }//GEN-LAST:event_jbExcluirPagarActionPerformed

    private boolean salvar() {
          
        Datas bl = new Datas();              
        
        try {
            this.modelnotafiscal.setData(bl.converterDataParaDateUS(this.jdData.getDate()));
      // this.modelParcelaContaRec.setDataVencimento(bl.converterDataParaDateUS(this.jdVencimentoParcela.getDate()));            
            
        } catch (Exception ex) {
            Logger.getLogger(ViewNotaFiscal.class.getName()).log(Level.SEVERE, null, ex);
        } 
     //   modelnotafiscal.setCodigoNota(HEIGHT);
        modelnotafiscal.setNumeroNota(this.jTNotaFiscal.getText());
        modelnotafiscal.setQuantidade(this.jTQtd.getText());
        modelnotafiscal.setValorNota(this.jTValorNota.getText());  
        modelnotafiscal.setCodigoFornecedor(controllerFornecedor.getFornecedorController(this.cbFornecedor.getSelectedItem().toString()).getCodigo());

   //     modelnotafiscal.setSituacao(0);
        //salvar 
        if(controllerNotaFiscal.salvarNotaFiscalController(modelnotafiscal) > 0) {
            JOptionPane.showMessageDialog(this, "Registro gravado com sucesso!");
            
            this.limparDados();
            this.habilitaDesabilitarCampos(false);        
            this.recuperarNota();
            return true;
        } else {
             JOptionPane.showMessageDialog(this, "Registro gravado com sucesso!");
         //   JOptionPane.showMessageDialog(this, "Erro ao gravar os dados da Nota Fiscal!", "ERRO", JOptionPane.ERROR_MESSAGE);
            this.limparDados();
            this.habilitaDesabilitarCampos(false);        
            this.recuperarNota();
            return false;
        }
                          
    }
    private boolean excluirConta() {
        
        int linha = tbNotaFiscal.getSelectedRow();
    //    String nome = (String) tbNotaFiscal.getValueAt(linha, 1);
        String numeronota = (String) tbNotaFiscal.getValueAt(linha, 0);

        //pegunta se realmente deseja excluir
        int opcao = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja"
                + " excluir a Nota Fiscal:\n" + "\n " + numeronota + "?", "Atenção", JOptionPane.YES_NO_OPTION);
        //se sim exclui, se não não faz nada
        if (opcao == JOptionPane.OK_OPTION) {
            if (controllerNotaFiscal.excluirNotaFiscalController(numeronota)) {
                JOptionPane.showMessageDialog(this, "Registro excluido com suscesso!");
                recuperarNota();
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao e os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }
         else {
                Mensagem.CancelarOperacao(this);
            }
        return true;
        
    }
    private void recuperarNota() {    
            listaModelNotaFiscals = controllerNotaFiscal.getNotaFiscalController();
            DefaultTableModel modelo = (DefaultTableModel) tbNotaFiscal.getModel();
            modelo.setNumRows(0);     
            int cont = listaModelNotaFiscals.size();
            for (int i = 0; i < cont; i++) {            
                modelo.addRow(new Object[]{              
                //    listaModelNotaFiscals.get(i).getCodigo(),
                    listaModelNotaFiscals.get(i).getNumeroNota(),
                    listaModelNotaFiscals.get(i).getQuantidade(),
                    listaModelNotaFiscals.get(i).getValorNota(),                    
                    listaModelNotaFiscals.get(i).getData(),
                    listaModelFornecedor.get(i).getNome(),              
            }); 
        
        }
    }
    private void listarFornecedores(){
        listaModelFornecedor = controllerFornecedor.getListaFornecedorController();
        cbFornecedor.removeAllItems();
    //    cbCodFornecedor.removeAllItems();
        for (int i = 0; i < listaModelFornecedor.size(); i++){
        //    cbCodFornecedor.addItem(listaModelFornecedor.get(i).getCodigo());
            cbFornecedor.addItem(listaModelFornecedor.get(i).getNome());
        }
    }
    private void habilitarCampos(){
        cbFornecedor.setEnabled(true);        
        jTNotaFiscal.setEnabled(true);
        jdData.setEnabled(true);
        jTQtd.setEnabled(true);
        jTValorNota.setEnabled(true);
        tbNotaFiscal.setEnabled(true);
    }
    private void limparDados(){
        listarFornecedores();
        recuperarNota();
        this.jTNotaFiscal.setText("");
        this.jTQtd.setText("");
        this.jTValorNota.setText("");
        this.jdData.setDate(null);
     //   this.cbFornecedor.setSelectedIndex(0);
        
    }
    
    /**
     * Habilitar ou desabilitar campos do formulário
     * @param operaco 
     */
    private void habilitaDesabilitarCampos(boolean operaco){
        this.jTNotaFiscal.setEnabled(operaco);
        this.jTQtd.setEnabled(operaco);
        this.jTValorNota.setEnabled(operaco);
        this.jdData.setEnabled(operaco);        
        this.cbFornecedor.setEnabled(operaco);
        
    
    }    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
       
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewNotaFiscal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewNotaFiscal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewNotaFiscal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewNotaFiscal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewNotaFiscal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancelar1;
    private javax.swing.JButton btFinalizar;
    private javax.swing.JButton btNovo;
    private javax.swing.JComboBox<String> cbFornecedor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTNotaFiscal;
    private javax.swing.JTextField jTQtd;
    private javax.swing.JTextField jTValorNota;
    private javax.swing.JButton jbExcluirPagar;
    private com.toedter.calendar.JDateChooser jdData;
    private javax.swing.JTable tbNotaFiscal;
    // End of variables declaration//GEN-END:variables
}
